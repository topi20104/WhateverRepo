<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>vaalikonewhatever</groupId>
  <artifactId>vaalikonewhatever</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>vaalikonewhatever</name>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.3</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
  <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>4.0.1</version>
    <scope>provided</scope>
</dependency>
  
  <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
	<!-- This dependency is needed for annotations (e.g. @Path, @Consumes, @Produces etc.) in the REST-class-->
	<dependency>
	    <groupId>org.glassfish.jersey.media</groupId>
	    <artifactId>jersey-media-json-jackson</artifactId>
	    <version>2.27</version>
	</dependency>

<!-- This is needed that your server can handle REST-class as a servlet.
		e.g. the class org.glassfish.jersey.servlet.ServletContainer 
		in the project's web.xml file can be found from this library 
		Notice: difference compared to servlets, which have shared instance variables and RESTful web services have not. --> 
	<dependency>
		<groupId>org.glassfish.jersey.containers</groupId>
		<artifactId>jersey-container-servlet</artifactId>
		<version>2.27</version>
	</dependency>

<!-- This is needed because of injections  - server can inject our extra classes into resource -->	
	<dependency>
		<groupId>org.glassfish.jersey.inject</groupId>
		<artifactId>jersey-hk2</artifactId>
		<version>2.27</version>
	</dependency>

<!-- This is needed to be able to connect to MySQL database. -->	
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.6</version>
	</dependency>
	
<!-- The next two dependencies are needed to be able to manage database with JPA. 
		In addition to eclipselink, there are several other libraries, too. 
		EclipseLink JPA API	-->
	<dependency>
		<groupId>org.eclipse.persistence</groupId>
		<artifactId>org.eclipse.persistence.jpa</artifactId>
		<version>2.4.2</version>
	</dependency>
	<!-- EclipseLink JPA implementation	-->
	<dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>eclipselink</artifactId>
	    <version>2.5.0</version>
	</dependency>
  </dependencies>
</project>