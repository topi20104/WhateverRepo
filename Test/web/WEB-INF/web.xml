<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
    <!--
            This class (org.glassfish.jersey.servlet.ServletContainer)
            is needed that server (servlet container) can handle REST-class as a servlet,
            which it actually is, though written in another way

            The element 'servlet-name' is the way we can bind this class and url.
            See the element servlet-mapping below. Its servlet-name element should
            have exactly the same value as here in the servlet element is.
        -->

    <servlet>
        <servlet-name>laptopservice</servlet-name>
        <servlet-class>
            org.glassfish.jersey.servlet.ServletContainer
        </servlet-class>
        <!--
            init-param tells in which package REST services are
        -->
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>main.java</param-value>
        </init-param>
        <!--
            This tells the server to load REST service when the server starts
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--
    servlet-mapping gives the first part of the path (url-pattern) where the
    REST service is found (e.g. http://my.server.fi/rest) and the rest of the path is given in
    the REST class and in its methods
    -->
    <servlet-mapping>
        <servlet-name>laptopservice</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

</web-app>